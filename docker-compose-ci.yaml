version: '3.8'

services:
  front:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - 80:80
    depends_on:
      - api
  api:
    image: elizarova25/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      DEBUG: $DEBUG
      SECRET_KEY: $SECRET_KEY
      ALLOWED_HOSTS: $ALLOWED_HOSTS
      SOCIAL_AUTH_VK_OAUTH2_KEY: $SOCIAL_AUTH_VK_OAUTH2_KEY
      SOCIAL_AUTH_VK_OAUTH2_SECRET: $SOCIAL_AUTH_VK_OAUTH2_SECRET
      TG_TOKEN: $TG_TOKEN
  bot:
    image: elizarova25/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      DEBUG: $DEBUG
      SECRET_KEY: $SECRET_KEY
      ALLOWED_HOSTS: $ALLOWED_HOSTS
      SOCIAL_AUTH_VK_OAUTH2_KEY: $SOCIAL_AUTH_VK_OAUTH2_KEY
      SOCIAL_AUTH_VK_OAUTH2_SECRET: $SOCIAL_AUTH_VK_OAUTH2_SECRET
      TG_TOKEN: $TG_TOKEN
    command: python3 manage.py runbot

  migrations:
    image: elizarova25/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DEBUG: $DEBUG
      SECRET_KEY: $SECRET_KEY
      ALLOWED_HOSTS: $ALLOWED_HOSTS
      SOCIAL_AUTH_VK_OAUTH2_KEY: $SOCIAL_AUTH_VK_OAUTH2_KEY
      SOCIAL_AUTH_VK_OAUTH2_SECRET: $SOCIAL_AUTH_VK_OAUTH2_SECRET
      TG_TOKEN: $TG_TOKEN
    command: python3 manage.py migrate
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_DB: $DB_NAME
    ports:
      - "5433:5432"
    restart: always
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:
  pg_data: